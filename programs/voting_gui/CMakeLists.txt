project(VotingBooth)

set(BINARY_NAME "voting_booth")
set(VERSION_MAJOR 0)
set(VERSION_MINOR 0)
set(VERSION_PATCH 1)

# Find includes in corresponding build directories
set(CMAKE_INCLUDE_CURRENT_DIR ON)
# Instruct CMake to run moc automatically when needed.
set(CMAKE_AUTOMOC ON)

# Configure the autogenerated .app bundle
if( APPLE )
    set( MACOSX_BUNDLE_BUNDLE_NAME "${BINARY_NAME}.app" )
    set( MACOSX_BUNDLE_EXECUTABLE_NAME ${BINARY_NAME} )
    set( MACOSX_BUNDLE_GUI_IDENTIFIER "org.bitshares.voting" )
    set( MACOSX_BUNDLE_INFO_STRING "BitShares Voting - version ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}" )
    set( MACOSX_BUNDLE_SHORT_VERSION_STRING "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}" )
    set( MACOSX_BUNDLE_LONG_VERSION_STRING "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}" )
    set( MACOSX_BUNDLE_BUNDLE_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}" )
    set( MACOSX_BUNDLE_COPYRIGHT "(C) 2014 God" )
endif()

# Find necessary Qt packages
find_package(Qt5Core)
find_package(Qt5Gui)
find_package(Qt5Qml)
find_package(Qt5Widgets)
add_definitions(-DQT_NO_KEYWORDS)

qt5_add_resources(qrc_sources qml.qrc res.qrc)
file(GLOB qml_files qml/*.qml)

add_executable(voting_booth WIN32 MACOSX_BUNDLE main.cpp ClientWrapper.cpp ${qrc_sources} ${qml_files})

target_link_libraries(voting_booth Qt5::Core Qt5::Gui Qt5::Qml Qt5::Widgets
   bts_wallet bts_rpc bts_cli bts_blockchain bts_db bts_net bts_client fc
   ${READLINE_LIBRARIES} ${CMAKE_DL_LIBS} ${PLATFORM_SPECIFIC_LIBS}
   ${crypto_library} ${CrashRpt_LIBRARIES} ${ZLIB_LIBRARY} upnpc-static)
